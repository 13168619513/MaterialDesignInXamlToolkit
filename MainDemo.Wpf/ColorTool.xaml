<UserControl x:Class="MaterialDesignDemo.ColorTool"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:MaterialDesignDemo.Converters"
             xmlns:local="clr-namespace:MaterialDesignDemo"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=local:ColorToolViewModel}"
             d:DesignHeight="600" d:DesignWidth="600">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.HexColorPicker.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.RadioButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
            <converters:BrushToHexConverter x:Key="BrushToHexConverter" /> 
            <converters:MultiValueEqualityConverter x:Key="MultiValueEqualityConverter" />
            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0" />
            </Style>
            <Style TargetType="TextBlock" x:Key="HexLabelTextBlock" BasedOn="{StaticResource MaterialDesignBody2TextBlock}">
                <Setter Property="Margin" Value="8" />
            </Style>
            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="LightGray" />
                <Setter Property="BorderThickness" Value="1" />
            </Style>
            <Style TargetType="TextBlock" x:Key="LabelTextBox">
                <Setter Property="FontWeight" Value="Light" />
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0 0 0 4" />
            </Style>


            <Style x:Key="MaterialDesignHorizontalColorSliderTrackRepeatButton" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource MaterialDesignHorizontalTrackRepeatButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="MaterialDesignColorSliderThumb" TargetType="{x:Type Thumb}">
                <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                    <Ellipse Width="20" Height="20" Fill="White" UseLayoutRounding="True" RenderTransformOrigin=".5,.5" />
                    <Ellipse x:Name="shadow" 
                     Width="24" Height="24" Margin="-12"
                     Fill="{TemplateBinding Foreground}"
                     Opacity=".0"
                     UseLayoutRounding="True" />
                    <Ellipse x:Name="grip" Width="16" Height="16" Fill="{TemplateBinding Foreground}"
                     UseLayoutRounding="True" RenderTransformOrigin=".5,.5">
                        <Ellipse.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1"></ScaleTransform>
                        </Ellipse.RenderTransform>
                    </Ellipse>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="shadow" Storyboard.TargetProperty="Opacity"
                                             To=".26" Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="shadow" Storyboard.TargetProperty="Opacity"
                                             To=".0" Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                    <Trigger Property="IsDragging" Value="true">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grip" Storyboard.TargetProperty="RenderTransform.ScaleX">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.2">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grip" Storyboard.TargetProperty="RenderTransform.ScaleY">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.2">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grip" Storyboard.TargetProperty="RenderTransform.ScaleX">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1.5" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grip" Storyboard.TargetProperty="RenderTransform.ScaleY">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1.5" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Fill" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="MaterialDesignColorSliderHorizontal" TargetType="{x:Type Slider}">
                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" CornerRadius="4" Height="8" >
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <GradientStop Color="#FF0000" Offset="0" />
                                    <GradientStop Color="#FFFF00" Offset="0.166" />
                                    <GradientStop Color="#00FF00" Offset="0.333" />
                                    <GradientStop Color="#00FFFF" Offset="0.5" />
                                    <GradientStop Color="#0000FF" Offset="0.666" />
                                    <GradientStop Color="#FF00FF" Offset="0.833" />
                                    <GradientStop Color="#FF0000" Offset="1.0" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Track x:Name="PART_Track" Grid.Row="1" OpacityMask="{x:Null}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource MaterialDesignHorizontalColorSliderTrackRepeatButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource MaterialDesignHorizontalColorSliderTrackRepeatButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Focusable="False" Height="20" OverridesDefaultStyle="True" Template="{StaticResource MaterialDesignColorSliderThumb}" 
                               VerticalAlignment="Center" Width="20" Foreground="{Binding Value, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HslHueToColorConverter}}"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </Border>
            </ControlTemplate>
            <ControlTemplate x:Key="MaterialDesignColorSliderVertical" TargetType="{x:Type Slider}">
                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="1" CornerRadius="4" Width="8">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="1,1" EndPoint="0,0">
                                    <GradientStop Color="#FF0000" Offset="0" />
                                    <GradientStop Color="#FFFF00" Offset="0.166" />
                                    <GradientStop Color="#00FF00" Offset="0.333" />
                                    <GradientStop Color="#00FFFF" Offset="0.5" />
                                    <GradientStop Color="#0000FF" Offset="0.666" />
                                    <GradientStop Color="#FF00FF" Offset="0.833" />
                                    <GradientStop Color="#FF0000" Offset="1.0" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Track x:Name="PART_Track" Grid.Column="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource MaterialDesignHorizontalColorSliderTrackRepeatButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource MaterialDesignHorizontalColorSliderTrackRepeatButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Focusable="False" Height="20" OverridesDefaultStyle="True" Template="{StaticResource MaterialDesignColorSliderThumb}"
                                       VerticalAlignment="Top" Width="20" Foreground="{Binding Value, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HslHueToColorConverter}}" />
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </Border>
            </ControlTemplate>

            <Style x:Key="MaterialDesignColorSlider" TargetType="{x:Type Slider}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Template" Value="{StaticResource MaterialDesignColorSliderHorizontal}"/>
                <Setter Property="Maximum" Value="360" />
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Template" Value="{StaticResource MaterialDesignColorSliderVertical}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignCheckBoxDisabled}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
        
    </UserControl.Resources>
    <DockPanel>
        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="8">
            <TextBlock VerticalAlignment="Center">Light</TextBlock>
            <ToggleButton Margin="8 0 16 0" Command="{Binding ToggleBaseCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" />
            <TextBlock VerticalAlignment="Center">Dark</TextBlock>
        </StackPanel>
        <DockPanel>
            <!-- Selection controls -->
            <Border DockPanel.Dock="Bottom">
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}" x:Key="PaletteButton">
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0" />
                            <Setter Property="materialDesign:ShadowAssist.ShadowEdges" Value="All" />
                            <Setter Property="materialDesign:RippleAssist.Feedback" Value="LightGray" />
                            <Setter Property="materialDesign:RippleAssist.RippleOnTop" Value="True" />
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                            <Setter Property="Height" Value="Auto" />
                            <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
                            <Setter Property="Padding" Value="16" />
                        </Style>
                        <Style TargetType="Border">

                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="300" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <!-- Primary selection -->
                    <Border BorderBrush="LightGray" BorderThickness="0 0 1 0">
                        <Button Command="{Binding ChangeToPrimaryCommand}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource PaletteButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ActiveScheme}" Value="Primary">
                                            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth3" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="2*" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBlock Style="{StaticResource LabelTextBox}">Primary</TextBlock>
                                <!-- Primary mid section -->
                                <Border Background="{DynamicResource PrimaryHueMidBrush}" Grid.Row="1">
                                    <Grid>
                                        <TextBlock DataContext="{DynamicResource PrimaryHueMidBrush}" Text="{Binding Converter={StaticResource BrushToHexConverter}}" Style="{StaticResource HexLabelTextBlock}" Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                        <Border Width="30" Height="30" CornerRadius="15">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ActiveScheme}" Value="Primary">
                                                            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22">
                                                <TextBlock.Text>
                                                    P
                                                </TextBlock.Text>
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ActiveScheme}" Value="Primary">
                                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Border>
                                    </Grid>
                                </Border>
                                <UniformGrid Rows="1" Grid.Row="2">
                                    <!-- Primary light -->
                                    <Border Background="{DynamicResource PrimaryHueLightBrush}">
                                        <TextBlock DataContext="{DynamicResource PrimaryHueLightBrush}" Text="{Binding Converter={StaticResource BrushToHexConverter}}" Style="{StaticResource HexLabelTextBlock}" Foreground="{DynamicResource PrimaryHueLightForegroundBrush}" />
                                    </Border>
                                    <!-- Primary dark -->
                                    <Border Background="{DynamicResource PrimaryHueDarkBrush}">
                                        <TextBlock DataContext="{DynamicResource PrimaryHueDarkBrush}" Text="{Binding Converter={StaticResource BrushToHexConverter}}" Style="{StaticResource HexLabelTextBlock}" Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" />
                                    </Border>
                                </UniformGrid>
                            </Grid>
                        </Button>
                    </Border>
                    <!-- Secondary selection -->
                    <Border BorderBrush="LightGray" Grid.Column="1" BorderThickness="0 0 1 0">
                        <Button Command="{Binding ChangeToSecondaryCommand}" >
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource PaletteButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ActiveScheme}" Value="Secondary">
                                            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth3" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="2*" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBlock Style="{StaticResource LabelTextBox}">Secondary</TextBlock>
                                <!-- Secondary mid section -->
                                <Border Background="{DynamicResource SecondaryHueMidBrush}" Grid.Row="1">
                                    <Grid>
                                        <TextBlock DataContext="{DynamicResource SecondaryHueMidBrush}" Text="{Binding Converter={StaticResource BrushToHexConverter}}" Style="{StaticResource HexLabelTextBlock}" Foreground="{DynamicResource SecondaryHueMidForegroundBrush}" />
                                        <Border Width="30" Height="30" CornerRadius="15">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ActiveScheme}" Value="Secondary">
                                                            <Setter Property="Background" Value="{DynamicResource SecondaryHueMidForegroundBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22">
                                                <TextBlock.Text>
                                                    S
                                                </TextBlock.Text>
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidForegroundBrush}" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ActiveScheme}" Value="Secondary">
                                                                <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Border>
                                    </Grid>
                                </Border>
                                <UniformGrid Rows="1" Grid.Row="2">
                                    <!-- Secondary light -->
                                    <Border Background="{DynamicResource SecondaryHueLightBrush}">
                                        <TextBlock DataContext="{DynamicResource SecondaryHueLightBrush}" Text="{Binding Converter={StaticResource BrushToHexConverter}}" Style="{StaticResource HexLabelTextBlock}" Foreground="{DynamicResource SecondaryHueLightForegroundBrush}" />
                                    </Border>
                                    <!-- Secondary dark -->
                                    <Border Background="{DynamicResource SecondaryHueDarkBrush}">
                                        <TextBlock DataContext="{DynamicResource SecondaryHueDarkBrush}" Text="{Binding Converter={StaticResource BrushToHexConverter}}" Style="{StaticResource HexLabelTextBlock}" Foreground="{DynamicResource SecondaryHueDarkForegroundBrush}" />
                                    </Border>
                                </UniformGrid>
                            </Grid>
                        </Button>
                    </Border>
                    <UniformGrid Grid.Column="2" Columns="1">
                        <!-- Primary foreground selection -->
                        <Border BorderBrush="LightGray" BorderThickness="0 0 0 1">
                            <Button Command="{Binding ChangeToPrimaryForegroundCommand}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource PaletteButton}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ActiveScheme}" Value="PrimaryForeground">
                                                <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth3" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Style="{StaticResource LabelTextBox}">Text on P</TextBlock>
                                    <Border Background="{DynamicResource PrimaryHueMidBrush}" Grid.Row="1">
                                        <Grid>
                                            <TextBlock DataContext="{DynamicResource PrimaryHueMidForegroundBrush}" Text="{Binding Converter={StaticResource BrushToHexConverter}}" Style="{StaticResource HexLabelTextBlock}" Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                            <Border Width="30" Height="30" CornerRadius="15">
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ActiveScheme}" Value="PrimaryForeground">
                                                                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22"
                                                           Text="T">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ActiveScheme}" Value="PrimaryForeground">
                                                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Border>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Button>
                        </Border>
                        <!-- Secondary foreground selection -->
                        <Border>
                            <Button Command="{Binding ChangeToSecondaryForegroundCommand}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource PaletteButton}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ActiveScheme}" Value="SecondaryForeground">
                                                <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth3" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Style="{StaticResource LabelTextBox}">Text on S</TextBlock>
                                    <Border Background="{DynamicResource SecondaryHueMidBrush}" Grid.Row="1">
                                        <Grid>
                                            <TextBlock DataContext="{DynamicResource SecondaryHueMidForegroundBrush}" Text="{Binding Converter={StaticResource BrushToHexConverter}}" Style="{StaticResource HexLabelTextBlock}" Foreground="{DynamicResource SecondaryHueMidForegroundBrush}" />
                                            <Border Width="30" Height="30" CornerRadius="15">
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ActiveScheme}" Value="SecondaryForeground">
                                                                <Setter Property="Background" Value="{DynamicResource SecondaryHueMidForegroundBrush}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22"
                                                           Text="T">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidForegroundBrush}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ActiveScheme}" Value="SecondaryForeground">
                                                                    <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Border>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Button>
                        </Border>
                    </UniformGrid>
                </Grid>
            </Border>
            <!-- Current scheme label -->
            <Border DockPanel.Dock="Bottom" BorderThickness="1 0 1 0">
                <TextBlock Style="{StaticResource LabelTextBox}" Margin="16">CURRENT SCHEME</TextBlock>
            </Border>
            <!-- Color picker section -->
            <Border Padding="16">
                <DockPanel>
                    <UniformGrid Columns="1" DockPanel.Dock="Right">
                        <RadioButton x:Name="MdPaletteButton" Style="{StaticResource MaterialDesignTabRadioButton}" Margin="4" IsChecked="True" Content="MD Palette"/>
                        <RadioButton x:Name="CustomPaletteButton" Style="{StaticResource MaterialDesignTabRadioButton}" Margin="4" IsChecked="False" Content="Custom"/>
                    </UniformGrid>
                    <Grid DockPanel.Dock="Left">
                        <materialDesign:HsbColorPicker Color="{Binding SelectedColor}" Visibility="{Binding IsChecked, ElementName=CustomPaletteButton, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <!--<materialDesign:HexColorPicker Radius="6" HsvValue="1" Visibility="{Binding IsChecked, ElementName=CustomPaletteButton, Converter={StaticResource BooleanToVisibilityConverter}}" ColorSelectedCommand="{Binding ChangeCustomHueCommand}" />-->
                        <ScrollViewer Visibility="{Binding IsChecked, ElementName=MdPaletteButton, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Width" Value="40" />
                                            <Setter Property="Margin" Value="1 1 0 0" />
                                            <Setter Property="TextAlignment" Value="Center" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <Rectangle Width="80" />
                                    <TextBlock>50</TextBlock>
                                    <TextBlock>100</TextBlock>
                                    <TextBlock>200</TextBlock>
                                    <TextBlock>300</TextBlock>
                                    <TextBlock>400</TextBlock>
                                    <TextBlock>500</TextBlock>
                                    <TextBlock>600</TextBlock>
                                    <TextBlock>700</TextBlock>
                                    <TextBlock>800</TextBlock>
                                    <TextBlock>900</TextBlock>
                                    <TextBlock>A100</TextBlock>
                                    <TextBlock>A200</TextBlock>
                                    <TextBlock>A400</TextBlock>
                                    <TextBlock>A700</TextBlock>
                                </StackPanel>
                                <ItemsControl ItemsSource="{Binding Swatches}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Name}" Width="80" VerticalAlignment="Center" />
                                                <ItemsControl ItemsSource="{Binding Hues}">
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <Button Height="40" Width="40" Background="{Binding Converter={StaticResource ColorToBrushConverter}}" Command="{Binding DataContext.ChangeHueCommand, RelativeSource={RelativeSource AncestorType=local:ColorTool}}" CommandParameter="{Binding}">
                                                                <Button.Style>
                                                                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                                                                        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="0" />
                                                                        <Setter Property="BorderThickness" Value="0" />
                                                                        <Setter Property="Margin" Value="1 1 0 0" />
                                                                        <Setter Property="materialDesign:RippleAssist.IsDisabled" Value="True" />
                                                                        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0" />
                                                                        <Style.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Trigger.EnterActions>
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Storyboard.TargetProperty="(materialDesign:ButtonAssist.CornerRadius)" To="8" Duration="0:0:0.18" />
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </Trigger.EnterActions>
                                                                                <Trigger.ExitActions>
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Storyboard.TargetProperty="(materialDesign:ButtonAssist.CornerRadius)" From="8" Duration="0:0:0.18" />
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </Trigger.ExitActions>
                                                                            </Trigger>
                                                                            <DataTrigger Value="True">
                                                                                <DataTrigger.Binding>
                                                                                    <MultiBinding Converter="{StaticResource MultiValueEqualityConverter}">
                                                                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ColorTool}" Path="DataContext.SelectedColor" Mode="OneWay" />
                                                                                        <Binding Mode="OneWay"/>
                                                                                    </MultiBinding>
                                                                                </DataTrigger.Binding>
                                                                                <DataTrigger.EnterActions>
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Storyboard.TargetProperty="(materialDesign:ButtonAssist.CornerRadius)" To="20" Duration="0:0:0.18" />
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </DataTrigger.EnterActions>
                                                                                <DataTrigger.ExitActions>
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Storyboard.TargetProperty="(materialDesign:ButtonAssist.CornerRadius)" From="20" Duration="0:0:0.18" />
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </DataTrigger.ExitActions>
                                                                            </DataTrigger>

                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Button.Style>
                                                            </Button>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <StackPanel Orientation="Horizontal" />
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                </ItemsControl>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </ScrollViewer>
                    </Grid>
                </DockPanel>
            </Border>
        </DockPanel>
    </DockPanel>
</UserControl>
